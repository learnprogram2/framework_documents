[面试题 17.11. 单词距离](https://leetcode-cn.com/problems/find-closest-lcci/)
有个内含单词的超大文本文件，给定任意两个单词，找出在这个文件中这两个单词的最短距离(相隔单词数)。如果寻找过程在这个文件中会重复多次，而每次寻找的单词不同，你能对此优化吗?
```txt
输入：words = ["I","am","a","student","from","a","university","in","a","city"], word1 = "a", word2 = "student"
输出：1
```

思路: 一步一步的, 先把两个的位置找到. 剩下的就是寻找最小位置了, 两个的位置list都是递增, 之前遇到过, 步进.的取寻找最小diff.

```java
    public int findClosest(String[] words, String word1, String word2) {
        List<Integer> word1Indexs = new ArrayList<>();
        List<Integer> word2Indexs = new ArrayList<>();
        // 1, 遍历, 查找到word1和word2的索引
        for (int i = 0; i < words.length; i++) {
            if (word1.equals(words[i])) {
                word1Indexs.add(i);
            } else if (word2.equals(words[i])) {
                word2Indexs.add(i);
            }
        }
        // 2. 两个index步进
        int diff = Integer.MAX_VALUE;
        int i = 0, j = 0;
        while(i < word1Indexs.size() && j < word2Indexs.size()) {
            diff = Math.min(Math.abs(word1Indexs.get(i) - word2Indexs.get(j)), diff);
            if (word1Indexs.get(i) < word2Indexs.get(j)) {
                i ++;
            } else {
                j ++;
            }
        }
        return diff;
    }
```